From 853cd23f7306ed7fb000fe1bcbc49b21dfadf804 Mon Sep 17 00:00:00 2001
From: Samuel Holland <samuel@sholland.org>
Date: Sat, 25 Feb 2017 23:02:21 -0600
Subject: [PATCH] Support dynamic linking for musl-based targets

To maintain existing behavior, it is disabled by default on all
architectures except MIPS.
---
 src/librustc_back/target/linux_musl_base.rs           | 9 +--------
 src/librustc_back/target/mips_unknown_linux_musl.rs   | 1 +
 src/librustc_back/target/mipsel_unknown_linux_musl.rs | 1 +
 3 files changed, 3 insertions(+), 8 deletions(-)

diff --git a/src/librustc_back/target/linux_musl_base.rs b/src/librustc_back/target/linux_musl_base.rs
index 236f2c1ef0aa..304d4bf257b4 100644
--- a/src/librustc_back/target/linux_musl_base.rs
+++ b/src/librustc_back/target/linux_musl_base.rs
@@ -60,14 +60,7 @@ pub fn opts() -> TargetOptions {
     base.pre_link_objects_exe.push("crti.o".to_string());
     base.post_link_objects.push("crtn.o".to_string());
 
-    // MUSL support doesn't currently include dynamic linking, so there's no
-    // need for dylibs or rpath business. Additionally `-pie` is incompatible
-    // with `-static`, so we can't pass `-pie`.
-    base.dynamic_linking = false;
-    base.has_rpath = false;
-    base.position_independent_executables = false;
-
-    // These targets statically link libc by default
+    // Except for on MIPS, these targets statically link libc by default.
     base.crt_static_default = true;
 
     base
diff --git a/src/librustc_back/target/mips_unknown_linux_musl.rs b/src/librustc_back/target/mips_unknown_linux_musl.rs
index f54790bab970..bcdbef72829a 100644
--- a/src/librustc_back/target/mips_unknown_linux_musl.rs
+++ b/src/librustc_back/target/mips_unknown_linux_musl.rs
@@ -27,6 +27,7 @@ pub fn target() -> TargetResult {
             features: "+mips32r2,+soft-float".to_string(),
             max_atomic_width: Some(32),
 
+            crt_static_default: false,
             // see #36994
             exe_allocation_crate: "alloc_system".to_string(),
 
diff --git a/src/librustc_back/target/mipsel_unknown_linux_musl.rs b/src/librustc_back/target/mipsel_unknown_linux_musl.rs
index 00085d18e6d0..75105c99b209 100644
--- a/src/librustc_back/target/mipsel_unknown_linux_musl.rs
+++ b/src/librustc_back/target/mipsel_unknown_linux_musl.rs
@@ -27,6 +27,7 @@ pub fn target() -> TargetResult {
             features: "+mips32,+soft-float".to_string(),
             max_atomic_width: Some(32),
 
+            crt_static_default: false,
             // see #36994
             exe_allocation_crate: "alloc_system".to_string(),
 
