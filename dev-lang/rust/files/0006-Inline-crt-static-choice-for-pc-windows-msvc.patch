From 3e6e0c13cdcda875ba71876bd3176363bf4fabc2 Mon Sep 17 00:00:00 2001
From: Samuel Holland <samuel@sholland.org>
Date: Sat, 2 Sep 2017 13:41:00 -0500
Subject: [PATCH 06/21] Inline crt-static choice for pc-windows-msvc

This avoids the possibility of a duplicate or conflicting crt-static
command line option sent to rustc.
---
 src/bootstrap/bin/rustc.rs | 5 -----
 src/bootstrap/lib.rs       | 8 ++++++--
 2 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/src/bootstrap/bin/rustc.rs b/src/bootstrap/bin/rustc.rs
index d22750158a..bc48c8f902 100644
--- a/src/bootstrap/bin/rustc.rs
+++ b/src/bootstrap/bin/rustc.rs
@@ -234,11 +234,6 @@ fn main() {
             }
         }
 
-        if target.contains("pc-windows-msvc") {
-            cmd.arg("-Z").arg("unstable-options");
-            cmd.arg("-C").arg("target-feature=+crt-static");
-        }
-
         if let Ok(s) = env::var("RUSTC_CRT_STATIC") {
             if s == "true" {
                 cmd.arg("-C").arg("target-feature=+crt-static");
diff --git a/src/bootstrap/lib.rs b/src/bootstrap/lib.rs
index a41f970a73..9203975480 100644
--- a/src/bootstrap/lib.rs
+++ b/src/bootstrap/lib.rs
@@ -915,8 +915,12 @@ impl Build {
 
     /// Returns if this target should statically link the C runtime, if specified
     fn crt_static(&self, target: &str) -> Option<bool> {
-        self.config.target_config.get(target)
-            .and_then(|t| t.crt_static)
+        if target.contains("pc-windows-msvc") {
+            Some(true)
+        } else {
+            self.config.target_config.get(target)
+                .and_then(|t| t.crt_static)
+        }
     }
 
     /// Returns the "musl root" for this `target`, if defined
-- 
2.13.5

