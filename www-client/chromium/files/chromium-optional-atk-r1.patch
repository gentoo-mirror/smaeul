--- chromium-69.0.3497.100/build/config/ui.gni
+++ chromium-69.0.3497.100/build/config/ui.gni
@@ -51,8 +51,10 @@ if (use_ozone) {
   use_glib = false
 }
 
-# Whether to use atk, the Accessibility ToolKit library
-use_atk = is_desktop_linux && use_x11
+declare_args() {
+  # Whether to use atk, the Accessibility ToolKit library
+  use_atk = is_desktop_linux && use_x11
+}
 # =============================================
 #   PLEASE DO NOT ADD MORE FLAGS TO THIS FILE
 # =============================================
--- chromium-72.0.3626.121/ui/views/widget/desktop_aura/desktop_window_tree_host_x11.cc
+++ chromium-72.0.3626.121/ui/views/widget/desktop_aura/desktop_window_tree_host_x11.cc
@@ -17,7 +17,9 @@
 #include "base/threading/thread_task_runner_handle.h"
 #include "base/trace_event/trace_event.h"
 #include "third_party/skia/include/core/SkPath.h"
+#if defined(USE_ATK)
 #include "ui/accessibility/platform/atk_util_auralinux.h"
+#endif
 #include "ui/aura/client/aura_constants.h"
 #include "ui/aura/client/cursor_client.h"
 #include "ui/aura/client/focus_client.h"
@@ -2048,11 +2050,15 @@ uint32_t DesktopWindowTreeHostX11::DispatchEvent(
       break;
     }
     case KeyPress: {
+#if defined(USE_ATK)
       if (ui::AtkUtilAuraLinux::HandleKeyEvent(xev) !=
           ui::DiscardAtkKeyEvent::Discard) {
+#endif
         ui::KeyEvent keydown_event(xev);
         DispatchKeyEvent(&keydown_event);
+#if defined(USE_ATK)
       }
+#endif
       break;
     }
     case KeyRelease: {
@@ -2061,11 +2067,15 @@ uint32_t DesktopWindowTreeHostX11::DispatchEvent(
       if (!IsActive() && !HasCapture())
         break;
 
+#if defined(USE_ATK)
       if (ui::AtkUtilAuraLinux::HandleKeyEvent(xev) !=
           ui::DiscardAtkKeyEvent::Discard) {
+#endif
         ui::KeyEvent key_event(xev);
         DispatchKeyEvent(&key_event);
+#if defined(USE_ATK)
       }
+#endif
       break;
     }
     case ButtonPress:
