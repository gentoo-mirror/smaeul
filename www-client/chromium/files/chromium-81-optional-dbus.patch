diff --git chromium-81.0.4044.113/chrome/browser/chrome_browser_main_linux.cc chromium-81.0.4044.113/chrome/browser/chrome_browser_main_linux.cc
index 416e3007d9..73df332f48 100644
--- chromium-81.0.4044.113/chrome/browser/chrome_browser_main_linux.cc
+++ chromium-81.0.4044.113/chrome/browser/chrome_browser_main_linux.cc
@@ -88,7 +88,7 @@ void ChromeBrowserMainPartsLinux::PostProfileInit() {
 }
 
 void ChromeBrowserMainPartsLinux::PostMainMessageLoopStart() {
-#if !defined(OS_CHROMEOS)
+#if !defined(OS_CHROMEOS) && defined(USE_DBUS)
   bluez::BluezDBusManager::Initialize(nullptr /* system_bus */);
 #endif
 
@@ -96,7 +96,7 @@ void ChromeBrowserMainPartsLinux::PostMainMessageLoopStart() {
 }
 
 void ChromeBrowserMainPartsLinux::PostDestroyThreads() {
-#if !defined(OS_CHROMEOS)
+#if !defined(OS_CHROMEOS) && defined(USE_DBUS)
   bluez::BluezDBusManager::Shutdown();
   bluez::BluezDBusThreadManager::Shutdown();
 #endif
diff --git chromium-81.0.4044.113/chrome/browser/metrics/bluetooth_available_utility.cc chromium-81.0.4044.113/chrome/browser/metrics/bluetooth_available_utility.cc
index 78417e5669..5822f8f76a 100644
--- chromium-81.0.4044.113/chrome/browser/metrics/bluetooth_available_utility.cc
+++ chromium-81.0.4044.113/chrome/browser/metrics/bluetooth_available_utility.cc
@@ -14,7 +14,7 @@
 #include "device/bluetooth/bluetooth_adapter.h"
 #include "device/bluetooth/bluetooth_adapter_factory.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) && defined(USE_DBUS)
 #include "device/bluetooth/dbus/bluez_dbus_manager.h"
 #endif  // defined(OS_LINUX)
 
@@ -64,7 +64,7 @@ void ReportBluetoothAvailability() {
     return;
   }
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) && defined(USE_DBUS)
   // This is for tests that have not initialized bluez or dbus thread manager.
   // Outside of tests these are initialized earlier during browser startup.
   if (!bluez::BluezDBusManager::IsInitialized())
diff --git chromium-81.0.4044.113/chrome/browser/platform_util_linux.cc chromium-81.0.4044.113/chrome/browser/platform_util_linux.cc
index 86cb40c333..c2810d8100 100644
--- chromium-81.0.4044.113/chrome/browser/platform_util_linux.cc
+++ chromium-81.0.4044.113/chrome/browser/platform_util_linux.cc
@@ -13,14 +13,18 @@
 #include "base/threading/scoped_blocking_call.h"
 #include "chrome/browser/chrome_notification_types.h"
 #include "chrome/browser/platform_util_internal.h"
+#if defined(USE_DBUS)
 #include "components/dbus/thread_linux/dbus_thread_linux.h"
+#endif
 #include "content/public/browser/browser_thread.h"
 #include "content/public/browser/notification_observer.h"
 #include "content/public/browser/notification_registrar.h"
 #include "content/public/browser/notification_service.h"
+#if defined(USE_DBUS)
 #include "dbus/bus.h"
 #include "dbus/message.h"
 #include "dbus/object_proxy.h"
+#endif
 #include "url/gurl.h"
 
 using content::BrowserThread;
@@ -29,6 +33,7 @@ namespace platform_util {
 
 namespace {
 
+#if defined(USE_DBUS)
 const char kFreedesktopFileManagerName[] = "org.freedesktop.FileManager1";
 const char kFreedesktopFileManagerPath[] = "/org/freedesktop/FileManager1";
 
@@ -111,6 +116,7 @@ class ShowItemHelper : public content::NotificationObserver {
 
   base::WeakPtrFactory<ShowItemHelper> weak_ptr_factory_{this};
 };
+#endif
 
 void RunCommand(const std::string& command,
                 const base::FilePath& working_directory,
@@ -177,8 +183,10 @@ void PlatformOpenVerifiedItem(const base::FilePath& path, OpenItemType type) {
 }  // namespace internal
 
 void ShowItemInFolder(Profile* profile, const base::FilePath& full_path) {
+#if defined(USE_DBUS)
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   ShowItemHelper::GetInstance().ShowItemInFolder(profile, full_path);
+#endif
 }
 
 void OpenExternal(Profile* profile, const GURL& url) {
diff --git chromium-81.0.4044.113/chrome/browser/ui/BUILD.gn chromium-81.0.4044.113/chrome/browser/ui/BUILD.gn
index efacc93f73..6c20a6a135 100644
--- chromium-81.0.4044.113/chrome/browser/ui/BUILD.gn
+++ chromium-81.0.4044.113/chrome/browser/ui/BUILD.gn
@@ -2585,10 +2585,6 @@ jumbo_static_library("ui") {
 
     if (use_x11) {
       sources += [
-        "views/frame/global_menu_bar_registrar_x11.cc",
-        "views/frame/global_menu_bar_registrar_x11.h",
-        "views/frame/global_menu_bar_x11.cc",
-        "views/frame/global_menu_bar_x11.h",
         "views/frame/native_browser_frame_factory_aurax11.cc",
         "views/javascript_app_modal_dialog_views_x11.cc",
         "views/javascript_app_modal_dialog_views_x11.h",
@@ -2597,11 +2593,21 @@ jumbo_static_library("ui") {
       ]
       configs += [ "//build/config/linux:x11" ]
       deps += [
-        "//components/dbus/menu",
         "//ui/events/devices",
         "//ui/events/devices/x11",
         "//ui/events/platform/x11",
       ]
+      if (use_dbus) {
+        sources += [
+          "views/frame/global_menu_bar_registrar_x11.cc",
+          "views/frame/global_menu_bar_registrar_x11.h",
+          "views/frame/global_menu_bar_x11.cc",
+          "views/frame/global_menu_bar_x11.h",
+        ]
+        deps += [
+          "//components/dbus/menu",
+        ]
+      }
     }
     if (use_ozone) {
       if (!is_desktop_linux) {
diff --git chromium-81.0.4044.113/chrome/browser/ui/views/frame/browser_desktop_window_tree_host_linux.cc chromium-81.0.4044.113/chrome/browser/ui/views/frame/browser_desktop_window_tree_host_linux.cc
index d2073245dd..31a22b2cde 100644
--- chromium-81.0.4044.113/chrome/browser/ui/views/frame/browser_desktop_window_tree_host_linux.cc
+++ chromium-81.0.4044.113/chrome/browser/ui/views/frame/browser_desktop_window_tree_host_linux.cc
@@ -22,7 +22,7 @@ BrowserDesktopWindowTreeHostLinux::BrowserDesktopWindowTreeHostLinux(
     BrowserFrame* browser_frame)
     : DesktopWindowTreeHostLinuxImpl(native_widget_delegate,
                                      desktop_native_widget_aura) {
-#if defined(USE_X11)
+#if defined(USE_X11) && defined(USE_DBUS)
   browser_view_ = browser_view;
 #endif
   browser_frame->set_frame_type(browser_frame->UseCustomFrame()
@@ -57,7 +57,7 @@ void BrowserDesktopWindowTreeHostLinux::Init(
     const views::Widget::InitParams& params) {
   DesktopWindowTreeHostLinuxImpl::Init(std::move(params));
 
-#if defined(USE_X11)
+#if defined(USE_X11) && defined(USE_DBUS)
   // We have now created our backing X11 window. We now need to (possibly)
   // alert Unity that there's a menu bar attached to it.
   global_menu_bar_x11_ =
@@ -66,7 +66,7 @@ void BrowserDesktopWindowTreeHostLinux::Init(
 }
 
 void BrowserDesktopWindowTreeHostLinux::CloseNow() {
-#if defined(USE_X11)
+#if defined(USE_X11) && defined(USE_DBUS)
   global_menu_bar_x11_.reset();
 #endif
   DesktopWindowTreeHostLinuxImpl::CloseNow();
diff --git chromium-81.0.4044.113/chrome/browser/ui/views/frame/browser_desktop_window_tree_host_linux.h chromium-81.0.4044.113/chrome/browser/ui/views/frame/browser_desktop_window_tree_host_linux.h
index 5ceccb1a39..6a8f0d90eb 100644
--- chromium-81.0.4044.113/chrome/browser/ui/views/frame/browser_desktop_window_tree_host_linux.h
+++ chromium-81.0.4044.113/chrome/browser/ui/views/frame/browser_desktop_window_tree_host_linux.h
@@ -9,7 +9,9 @@
 #include "chrome/browser/ui/views/frame/browser_desktop_window_tree_host.h"
 
 #if defined(USE_X11)
+#if defined(USE_DBUS)
 #include "chrome/browser/ui/views/frame/global_menu_bar_x11.h"  // nogncheck
+#endif
 #include "ui/views/widget/desktop_aura/desktop_window_tree_host_x11.h"  // nogncheck
 #else
 #include "ui/views/widget/desktop_aura/desktop_window_tree_host_linux.h"  // nogncheck
@@ -54,7 +56,7 @@ class BrowserDesktopWindowTreeHostLinux
   void Init(const views::Widget::InitParams& params) override;
   void CloseNow() override;
 
-#if defined(USE_X11)
+#if defined(USE_X11) && defined(USE_DBUS)
   BrowserView* browser_view_ = nullptr;
 
   // Each browser frame maintains its own menu bar object because the lower
diff --git chromium-81.0.4044.113/device/bluetooth/bluetooth_adapter_factory.cc chromium-81.0.4044.113/device/bluetooth/bluetooth_adapter_factory.cc
index 8c3369595f..be1de81b70 100644
--- chromium-81.0.4044.113/device/bluetooth/bluetooth_adapter_factory.cc
+++ chromium-81.0.4044.113/device/bluetooth/bluetooth_adapter_factory.cc
@@ -96,7 +96,7 @@ bool BluetoothAdapterFactory::IsBluetoothSupported() {
   // instance even on platforms that would otherwise not support it.
   if (default_adapter.Get())
     return true;
-#if defined(OS_ANDROID) || defined(OS_WIN) || defined(OS_LINUX) || \
+#if defined(OS_ANDROID) || defined(OS_WIN) || (defined(OS_LINUX) && defined(USE_DBUS)) || \
     defined(OS_MACOSX)
   return true;
 #else
@@ -119,7 +119,7 @@ bool BluetoothAdapterFactory::IsLowEnergySupported() {
   return base::win::GetVersion() >= base::win::Version::WIN10;
 #elif defined(OS_MACOSX)
   return true;
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) && defined(USE_DBUS)
   return true;
 #else
   return false;
diff --git chromium-81.0.4044.113/extensions/browser/api/bluetooth_low_energy/bluetooth_low_energy_api.cc chromium-81.0.4044.113/extensions/browser/api/bluetooth_low_energy/bluetooth_low_energy_api.cc
index 2d4cf40561..3ec27fe8bc 100644
--- chromium-81.0.4044.113/extensions/browser/api/bluetooth_low_energy/bluetooth_low_energy_api.cc
+++ chromium-81.0.4044.113/extensions/browser/api/bluetooth_low_energy/bluetooth_low_energy_api.cc
@@ -1328,7 +1328,7 @@ void BluetoothLowEnergyCreateServiceFunction::DoWork() {
 // TODO: Ideally this should be handled by our feature system, so that this
 // code doesn't even compile on OSes it isn't being used on, but currently this
 // is not possible.
-#if !defined(OS_WIN)
+#if !defined(OS_WIN) && (!defined(OS_LINUX) || defined(USE_DBUS))
   base::WeakPtr<device::BluetoothLocalGattService> service =
       device::BluetoothLocalGattService::Create(
           event_router_->adapter(),
@@ -1357,6 +1357,7 @@ bool BluetoothLowEnergyCreateCharacteristicFunction::ParseParams() {
 }
 
 void BluetoothLowEnergyCreateCharacteristicFunction::DoWork() {
+#if !defined(OS_LINUX) || defined(USE_DBUS)
   device::BluetoothLocalGattService* service =
       event_router_->adapter()->GetGattService(params_->service_id);
   if (!service) {
@@ -1377,6 +1378,9 @@ void BluetoothLowEnergyCreateCharacteristicFunction::DoWork() {
 
   Respond(ArgumentList(apibtle::CreateCharacteristic::Results::Create(
       characteristic->GetIdentifier())));
+#else
+  Respond(Error(kErrorPlatformNotSupported));
+#endif
 }
 
 // createDescriptor:
@@ -1393,6 +1397,7 @@ bool BluetoothLowEnergyCreateDescriptorFunction::ParseParams() {
 }
 
 void BluetoothLowEnergyCreateDescriptorFunction::DoWork() {
+#if !defined(OS_LINUX) || defined(USE_DBUS)
   device::BluetoothLocalGattCharacteristic* characteristic =
       event_router_->GetLocalCharacteristic(params_->characteristic_id);
   if (!characteristic) {
@@ -1408,6 +1413,9 @@ void BluetoothLowEnergyCreateDescriptorFunction::DoWork() {
 
   Respond(ArgumentList(
       apibtle::CreateDescriptor::Results::Create(descriptor->GetIdentifier())));
+#else
+  Respond(Error(kErrorPlatformNotSupported));
+#endif
 }
 
 // registerService:
diff --git chromium-81.0.4044.113/services/device/battery/battery_status_manager_default.cc chromium-81.0.4044.113/services/device/battery/battery_status_manager_default.cc
index 0249c6faa5..ab2ff4e179 100644
--- chromium-81.0.4044.113/services/device/battery/battery_status_manager_default.cc
+++ chromium-81.0.4044.113/services/device/battery/battery_status_manager_default.cc
@@ -22,11 +22,10 @@ class BatteryStatusManagerDefault : public BatteryStatusManager {
  private:
   // BatteryStatusManager:
   bool StartListeningBatteryChange() override {
-    NOTIMPLEMENTED();
     return false;
   }
 
-  void StopListeningBatteryChange() override { NOTIMPLEMENTED(); }
+  void StopListeningBatteryChange() override { }
 
   DISALLOW_COPY_AND_ASSIGN(BatteryStatusManagerDefault);
 };
diff --git chromium-81.0.4044.113/services/device/wake_lock/power_save_blocker/BUILD.gn chromium-81.0.4044.113/services/device/wake_lock/power_save_blocker/BUILD.gn
index af81c2e451..ac1f6bf2b3 100644
--- chromium-81.0.4044.113/services/device/wake_lock/power_save_blocker/BUILD.gn
+++ chromium-81.0.4044.113/services/device/wake_lock/power_save_blocker/BUILD.gn
@@ -74,6 +74,9 @@ if (is_android) {
     visibility = [ ":power_save_blocker" ]
     sources = java_sources_needing_jni
   }
+  if (!is_chromeos && use_x11 && !use_dbus) {
+    sources += [ "power_save_blocker_ozone.cc" ]
+  }
 
   android_library("java") {
     # Conceptually, this should be visible only to //services/device:java.
