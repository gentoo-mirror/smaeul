diff --git chromium-85.0.4183.83/base/threading/platform_thread_linux.cc chromium-85.0.4183.83/base/threading/platform_thread_linux.cc
index 095c49b8dc..086ac6afc5 100644
--- chromium-85.0.4183.83/base/threading/platform_thread_linux.cc
+++ chromium-85.0.4183.83/base/threading/platform_thread_linux.cc
@@ -186,7 +186,11 @@ void TerminateOnThread() {}
 
 size_t GetDefaultThreadStackSize(const pthread_attr_t& attributes) {
 #if !defined(THREAD_SANITIZER)
+#if !defined(__GLIBC__)
+  return 1 * (1 << 23);  // 8192K (the default stack size on glibc)
+#else
   return 0;
+#endif
 #else
   // ThreadSanitizer bloats the stack heavily. Evidence has been that the
   // default stack size isn't enough for some browser tests.
diff --git chromium-85.0.4183.83/chrome/app/shutdown_signal_handlers_posix.cc chromium-85.0.4183.83/chrome/app/shutdown_signal_handlers_posix.cc
index 621d441e81..8c3e9ee288 100644
--- chromium-85.0.4183.83/chrome/app/shutdown_signal_handlers_posix.cc
+++ chromium-85.0.4183.83/chrome/app/shutdown_signal_handlers_posix.cc
@@ -187,7 +187,14 @@ void InstallShutdownSignalHandlers(
   g_shutdown_pipe_read_fd = pipefd[0];
   g_shutdown_pipe_write_fd = pipefd[1];
 #if !defined(ADDRESS_SANITIZER)
+#if !defined(__GLIBC__)
+  // PTHREAD_STACK_MIN is much smaller on musl. ConstructTlsVector uses
+  // 6616 bytes of stack by itself. This matches the value of the GLIBC
+  // minumum * 2.
+  const size_t kShutdownDetectorThreadStackSize = 32768;
+#else
   const size_t kShutdownDetectorThreadStackSize = PTHREAD_STACK_MIN * 2;
+#endif
 #else
   // ASan instrumentation bloats the stack frames, so we need to increase the
   // stack size to avoid hitting the guard page.
