--- chromium-54.0.2840.59/base/debug/stack_trace_posix.cc.orig	2016-05-08 07:59:51.749087517 +0200
+++ chromium-54.0.2840.59/base/debug/stack_trace_posix.cc	2016-05-08 08:01:24.988950619 +0200
@@ -24,7 +24,7 @@
 #if !defined(USE_SYMBOLIZE)
 #include <cxxabi.h>
 #endif
-#if !defined(__UCLIBC__)
+#if defined(__GLIBC__) && !defined(__UCLIBC__)
 #include <execinfo.h>
 #endif
 
@@ -75,7 +75,7 @@ void DemangleSymbols(std::string* text)
   // Note: code in this function is NOT async-signal safe (std::string uses
   // malloc internally).
 
-#if !defined(__UCLIBC__)
+#if defined(__GLIBC__) && !defined(__UCLIBC__)
 
   std::string::size_type search_from = 0;
   while (search_from < text->size()) {
@@ -112,6 +112,6 @@ void DemangleSymbols(std::string* text)
     }
   }
-#endif  // !defined(__UCLIBC__)
+#endif  // defined(__GLIBC__) && !defined(__UCLIBC__)
 }
 #endif  // !defined(USE_SYMBOLIZE)
 
@@ -124,7 +124,7 @@ class BacktraceOutputHandler {
   virtual ~BacktraceOutputHandler() {}
 };
 
-#if !defined(__UCLIBC__)
+#if defined(__GLIBC__) && !defined(__UCLIBC__)
 void OutputPointer(void* pointer, BacktraceOutputHandler* handler) {
   // This should be more than enough to store a 64-bit number in hex:
   // 16 hex digits + 1 for null-terminator.
@@ -201,7 +201,7 @@ void ProcessBacktrace(void *const *trace
   }
 #endif  // defined(USE_SYMBOLIZE)
 }
-#endif  // !defined(__UCLIBC__)
+#endif  // defined(__GLIBC__) && !defined(__UCLIBC__)
 
 void PrintToStderr(const char* output) {
   // NOTE: This code MUST be async-signal safe (it's used by in-process
@@ -716,7 +716,7 @@ StackTrace::StackTrace() {
 // NOTE: This code MUST be async-signal safe (it's used by in-process
 // stack dumping signal handler). NO malloc or stdio is allowed here.
 
-#if !defined(__UCLIBC__)
+#if defined(__GLIBC__) && !defined(__UCLIBC__)
   count = std::min(arraysize(trace_), count);
 
   // Though the backtrace API man page does not list any possible negative
@@ -729,13 +729,13 @@ void StackTrace::Print() const {
   // NOTE: This code MUST be async-signal safe (it's used by in-process
   // stack dumping signal handler). NO malloc or stdio is allowed here.
 
-#if !defined(__UCLIBC__)
+#if defined(__GLIBC__) && !defined(__UCLIBC__)
   PrintBacktraceOutputHandler handler;
   ProcessBacktrace(trace_, count_, &handler);
 #endif
 }
 
-#if !defined(__UCLIBC__)
+#if defined(__GLIBC__) && !defined(__UCLIBC__)
 void StackTrace::OutputToStream(std::ostream* os) const {
   StreamBacktraceOutputHandler handler(os);
   ProcessBacktrace(trace_, count_, &handler);
--- chromium-54.0.2840.59/third_party/WebKit/Source/platform/wtf/Assertions.cpp.orig	2016-05-08 08:02:03.230553120 +0200
+++ chromium-54.0.2840.59/third_party/WebKit/Source/platform/wtf/Assertions.cpp	2016-05-08 08:02:35.822504255 +0200
@@ -60,7 +60,7 @@
 #include <windows.h>
 #endif
 
-#if OS(MACOSX) || (OS(LINUX) && !defined(__UCLIBC__))
+#if OS(MACOSX) || (OS(LINUX) && defined(__GLIBC__))
 #include <cxxabi.h>
 #include <dlfcn.h>
 #include <execinfo.h>
@@ -142,7 +142,7 @@ class FrameToNameScope {
 };
 
 FrameToNameScope::FrameToNameScope(void* addr) : m_name(0), m_cxaDemangled(0) {
-#if OS(MACOSX) || (OS(LINUX) && !defined(__UCLIBC__))
+#if OS(MACOSX) || (OS(LINUX) && defined(__GLIBC__))
   Dl_info info;
   if (!dladdr(addr, &info) || !info.dli_sname)
     return;
--- chromium-54.0.2840.59/third_party/webrtc/base/checks.cc.orig	2016-05-08 08:03:04.398461275 +0200
+++ chromium-54.0.2840.59/third_party/webrtc/base/checks.cc	2016-05-08 08:03:24.254431362 +0200
@@ -16,7 +16,7 @@
 #include <cstdio>
 #include <cstdlib>
 
-#if defined(__GLIBCXX__) && !defined(__UCLIBC__)
+#if defined(__GLIBCXX__) && defined(__GLIBC__)
 #include <cxxabi.h>
 #include <execinfo.h>
 #endif
@@ -60,7 +60,7 @@ void PrintError(const char* format, ...)
 // to get usable symbols on Linux. This is copied from V8. Chromium has a more
 // advanced stace trace system; also more difficult to copy.
 void DumpBacktrace() {
-#if defined(__GLIBCXX__) && !defined(__UCLIBC__)
+#if defined(__GLIBCXX__) && defined(__GLIBC__)
   void* trace[100];
   int size = backtrace(trace, sizeof(trace) / sizeof(*trace));
   char** symbols = backtrace_symbols(trace, size);
diff --git chromium-59.0.3071.86/third_party/swiftshader/third_party/llvm-subzero/build/Linux/include/llvm/Config/config.h
index 154fefe..9f04b23 100644
--- chromium-59.0.3071.86/third_party/swiftshader/third_party/llvm-subzero/build/Linux/include/llvm/Config/config.h.orig
+++ chromium-59.0.3071.86/third_party/swiftshader/third_party/llvm-subzero/build/Linux/include/llvm/Config/config.h
@@ -14,7 +14,7 @@
 #define ENABLE_CRASH_OVERRIDES 1
 
 /* Define to 1 if you have the `backtrace' function. */
-#define HAVE_BACKTRACE 1
+/* #undef HAVE_BACKTRACE */
 
 /* Define to 1 if you have the <CrashReporterClient.h> header file. */
 /* #undef HAVE_CRASHREPORTERCLIENT_H */
@@ -55,7 +55,7 @@
 #define HAVE_ERRNO_H 1
 
 /* Define to 1 if you have the <execinfo.h> header file. */
-#define HAVE_EXECINFO_H 1
+/* #undef HAVE_EXECINFO_H */
 
 /* Define to 1 if you have the <fcntl.h> header file. */
 #define HAVE_FCNTL_H 1
